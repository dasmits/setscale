{"version":3,"sources":["Viz.js","Control.js","App.js","reportWebVitals.js","index.js"],"names":["equal","require","cellStyle","i","props","model","num","boundary","row","parseInt","col","critical","border","margin","padding","backgroundColor","boxShadow","makeGrid","g","push","style","Viz","state","grid","nextProps","nextState","this","id","n","display","gridTemplateColumns","gridTemplateRows","height","width","Component","Control","updateModel","e","setState","target","value","map","m","type","name","onChange","checked","for","min","max","step","onClick","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQACIA,EAAQC,EAAQ,IAehBC,EAAY,SAACC,EAAGC,GAChB,IAAMC,EAAQD,EAAMC,MACdC,EAAMF,EAAME,IACZC,EAAWH,EAAMG,SACnBC,EAAMC,SAASN,EAAEG,GAAK,EACtBI,EAAOP,EAAEG,EAAM,EACbK,EAAWP,EAAMO,UAAYH,GAAOE,GAAOF,EAAKF,EAAI,EAAE,GAAMI,EAAKJ,EAAI,EAAE,EA2C7E,MAAO,CACHM,OAAQ,sBACRC,OAAQ,EACRC,QAAS,EACTC,gBANU,CAAC,UAAW,UAAW,WAtClCP,GAAOE,EACA,EAEFF,EAAME,EACE,OAATL,EACQG,EAAMD,EAAW,EAAI,EAEf,SAATF,GAGS,YAATA,EAFE,EAKO,YAATA,GACGG,EAAMD,EAAW,EAGlB,EAIE,OAATF,EACQG,EAAMD,EAAW,EAAI,EAEf,SAATF,EACE,EAEO,YAATA,EACGG,EAAMD,EAAW,EAAI,EAEf,YAATF,EACE,EAGA,GAWVW,UAAWL,EAAS,4CAA6C,KAIrEM,EAAW,SAAAb,GAEX,IADA,IAAIc,EAAI,GACAf,EAAE,EAAGA,EAAEC,EAAME,IAAIF,EAAME,IAAKH,IAChCe,EAAEC,KAAK,qBAAKC,MAAOlB,EAAUC,EAAEC,MAEnC,OAAOc,GAGUG,E,kDACjB,WAAYjB,GAAO,IAAD,8BACd,cAAMA,IACDkB,MAAQ,GAGb,EAAKC,KAAON,EAAS,EAAKb,OALZ,E,kEASIoB,EAAWC,GAC7B,OAAKzB,EAAMwB,EAAWE,KAAKtB,SACvBsB,KAAKH,KAAON,EAASO,IACd,K,+BAOX,OACI,qBAAKG,GAAG,OAAOP,OApGVQ,EAoG2BF,KAAKtB,MAAME,IAnG5C,CACHuB,QAAQ,OACRC,oBAAqB,UAAUF,EAAE,SACjCG,iBAAiB,UAAUH,EAAE,SAC7BI,OAAQ,IACRC,MAAO,IACPpB,OAAQ,cA6FJ,SACKa,KAAKH,OArGN,IAACK,M,GA+EgBM,aC/EZC,E,kDACjB,WAAY/B,GAAO,IAAD,8BACd,cAAMA,IASVgC,YAAc,SAAAC,GACV,EAAKC,SAAS,CAACjC,MAAMgC,EAAEE,OAAOC,SAT9B,EAAKlB,MAAQ,CACThB,IAAK,EACLC,SAAU,EACVF,MAAO,MACPM,UAAW,GAND,E,qDAcT,IAAD,OACJ,OACI,gCACI,iCACK,CAAC,MAAO,QAAS,WAAY,WAAY,WAAW8B,KAAI,SAAAC,GAAC,OACtD,gCACI,uBAAOC,KAAK,QAAQC,KAAK,QAAQjB,GAAIe,EAAE,MAAOF,MAAOE,EAAGG,SAAU,EAAKT,YAAaU,QAAS,EAAKxB,MAAMjB,OAAOqC,IAC/G,uBAAOK,IAAKL,EAAE,MAAd,SAAsBA,UAI9B,uBACA,sDACsBhB,KAAKJ,MAAMhB,IADjC,IACsC,uBAClC,uBAAOqC,KAAK,QAAQC,KAAK,MAAMI,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAC7CV,MAAOd,KAAKJ,MAAMhB,IAAKuC,SAAU,SAACR,GAAD,OAAK,EAAKC,SAAS,CAAChC,IAAI+B,EAAEE,OAAOC,MAAOjC,SAAU8B,EAAEE,OAAOC,MAAM,UAG9G,uBACA,+CACed,KAAKJ,MAAMf,SAD1B,IACoC,uBAC5B,uBAAOoC,KAAK,QAAQC,KAAK,WAAWI,IAAI,IAAIC,IAAKvB,KAAKJ,MAAMhB,IAAK4C,KAAM,IACnEV,MAAOd,KAAKJ,MAAMf,SAAUsC,SAAU,SAACR,GAAD,OAAK,EAAKC,SAAS,CAAC/B,SAAS8B,EAAEE,OAAOC,cAExF,uBACA,yBAAQG,KAAK,SAASQ,QAAS,SAACd,GAAD,OAAK,EAAKC,SAAS,CAAC3B,UAAU,EAAKW,MAAMX,YAAxE,+BAAuGe,KAAKJ,MAAMX,SAAS,OAAO,cAGtI,cAAC,EAAD,CAAKA,SAAUe,KAAKJ,MAAMX,SAAUL,IAAKoB,KAAKJ,MAAMhB,IAAKD,MAAOqB,KAAKJ,MAAMjB,MAAOE,SAAWmB,KAAKJ,MAAMf,kB,GA3CnF2B,aCStBkB,MAVf,WAEE,OACE,sBAAKC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,QCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eaf10e90.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nvar equal = require('deep-equal');\r\n\r\nvar gridStyle = (n)=>{\r\n    return {\r\n        display:\"grid\",\r\n        gridTemplateColumns: \"repeat(\"+n+\", 1fr)\",\r\n        gridTemplateRows:\"repeat(\"+n+\", 1fr)\",\r\n        height: 500,\r\n        width: 500,\r\n        margin: \"30px auto\",\r\n    }\r\n}\r\n\r\n\r\n\r\nvar cellStyle = (i, props)=>{\r\n    const model = props.model;\r\n    const num = props.num;\r\n    const boundary = props.boundary;\r\n    var row = parseInt(i/num)+1\r\n    var col = (i%num) +1\r\n    const critical = props.critical && row != col && row<(num/2+1) == col<(num/2+1); \r\n    \r\n    var val;\r\n    if(row == col){\r\n        val = 2;\r\n    }\r\n    else if(row < col){\r\n        if(model == \"set\"){\r\n            val = (row > boundary)? 1 : 0;\r\n        }\r\n        else if(model == \"scale\"){\r\n            val = 0;\r\n        }\r\n        else if(model == \"external\"){\r\n            val = 0;\r\n        }\r\n        else if(model == \"internal\"){\r\n            val = (row > boundary)? 1 : 0;\r\n        }\r\n        else{\r\n            val = 0;  \r\n        } \r\n    }\r\n    else{\r\n        if(model == \"set\"){\r\n            val = (row > boundary)? 1 : 0;\r\n        }\r\n        else if(model == \"scale\"){\r\n            val = 1;\r\n        }\r\n        else if(model == \"external\"){\r\n            val = (row > boundary)? 1 : 0;\r\n        }\r\n        else if(model == \"internal\"){\r\n            val = 1;\r\n        }\r\n        else{\r\n            val = 0;  \r\n        } \r\n    }\r\n    \r\n    var val2col = [\"#f79797\", \"#feffbf\", \"#a2f2ad\"]\r\n    \r\n    return {\r\n        border: \".5px solid darkgrey\",\r\n        margin: 0,\r\n        padding: 0,\r\n        backgroundColor: val2col[val],\r\n        boxShadow: critical?\"inset 0px 0px 10px 1px rgba(75,75,75,.75)\": \"\"\r\n    }\r\n}\r\n\r\nvar makeGrid = props=>{\r\n    var g = []\r\n    for(var i=0; i<props.num*props.num; i++){\r\n        g.push(<div style={cellStyle(i,props)}></div>)\r\n    }\r\n    return g\r\n}\r\n\r\nexport default class Viz extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n        this.grid = makeGrid(this.props);\r\n        \r\n    }\r\n    \r\n    shouldComponentUpdate(nextProps, nextState){\r\n        if(! equal(nextProps, this.props)){\r\n            this.grid = makeGrid(nextProps);\r\n            return true;\r\n        }\r\n        return false;\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"grid\" style={gridStyle(this.props.num)}>\r\n                {this.grid}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Viz from './Viz';\r\n\r\nexport default class Control extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            num: 4,\r\n            boundary: 2,\r\n            model: \"set\",\r\n            critical : false\r\n        }\r\n    }\r\n\r\n    updateModel = e =>{\r\n        this.setState({model:e.target.value});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form>\r\n                    {[\"set\", \"scale\", \"internal\", \"external\", \"literal\"].map(m=>\r\n                        <div>\r\n                            <input type=\"radio\" name=\"model\" id={m+\"_id\"} value={m} onChange={this.updateModel} checked={this.state.model==m} />\r\n                            <label for={m+\"_id\"}>{m}</label>\r\n                        </div>\r\n                    )}\r\n            \r\n                    <br/>\r\n                    <label>\r\n                        Number of Items: {this.state.num} <br/>\r\n                        <input type=\"range\" name=\"num\" min=\"4\" max=\"12\" step=\"2\"\r\n                                value={this.state.num} onChange={(e)=>this.setState({num:e.target.value, boundary: e.target.value/2})}/>\r\n\r\n                    </label>\r\n                    <br/>\r\n                    <label>\r\n                        Boundary: {this.state.boundary} <br/>\r\n                            <input type=\"range\" name=\"boundary\" min=\"0\" max={this.state.num} step =\"1\"\r\n                                value={this.state.boundary} onChange={(e)=>this.setState({boundary:e.target.value})}/>\r\n                    </label>\r\n                    <br/>\r\n                    <button type=\"button\" onClick={(e)=>this.setState({critical:!this.state.critical})}>Toggle Critical : {this.state.critical?\"True\":\"False\"}</button>\r\n                </form>\r\n\r\n                <Viz critical={this.state.critical} num={this.state.num} model={this.state.model} boundary ={this.state.boundary}/>\r\n\r\n            </div> \r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport Control from './Control';\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1> Sets and Scales</h1>\n      <Control/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}